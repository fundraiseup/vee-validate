/**
  * vee-validate v2.2.15
  * (c) 2020 Abdelrahman Awad
  * @license MIT
  */
// 

/**
 * Checks if a function is callable.
 */
var isCallable = function (func) { return typeof func === 'function'; };

/**
 * Converts an array-like object to array, provides a simple polyfill for Array.from
 */
var toArray = function (arrayLike) {
  if (isCallable(Array.from)) {
    return Array.from(arrayLike);
  }

  var array = [];
  var length = arrayLike.length;
  /* istanbul ignore next */
  for (var i = 0; i < length; i++) {
    array.push(arrayLike[i]);
  }

  /* istanbul ignore next */
  return array;
};

var validate = function (value, options) {
  if (Array.isArray(value)) {
    return value.every(function (val) { return validate(val, options); });
  }

  return toArray(options).some(function (item) {
    // eslint-disable-next-line
    return item == value;
  });
};

var validate$1 = function () {
  var args = [], len = arguments.length;
  while ( len-- ) args[ len ] = arguments[ len ];

  return !validate.apply(void 0, args);
};

var excluded = {
  validate: validate$1
};

export default excluded;
export { validate$1 as validate };
